
// TESI: Integrazione FPGA in FastFlow

Si propone di realizzare un semplice prototipo per l'integrazione di kernel programmati su FPGA Alveo mediante Vitis (sostanzialmente kernel scritti in C/C++) nell'ambiente di programmazione FastFlow. Verranno utilizzati kernel esistenti.
L'obiettivo della tesi sarà quello di interfacciare i kernel mediante codice OpenCL sfruttando tutte le possibilità offerte da tale ambiente. L'integrazione in FastFlow dovrà permettere di utilizzare sia il classico parallelismo shared memory/thread sulla CPU multicore che l'offloading di computazioni pesanti sull'acceleratore FPGA.


FastFlow:
   https://github.com/fastflow/fastflow


Parte di colloquio con l'acceleratore vedi VITIS XILINX:
	https://docs.amd.com/r/en-US/Vitis-Tutorials-Getting-Started/Vitis-Introduction-and-Getting-Started


Per usarla con GPU
    https://eunomia.dev/en/others/cuda-tutorial/15-opencl-vector-addition/


L'account è deleonardis, la macchina è
	pianosa.di.unipi.it has address 131.114.3.250




Punti chiave da ricordare:
   Asincronia: la computazione sull’acceleratore non blocca i thread FastFlow grazie alla coppia Producer/Consumer.
   Overlapping: mentre il kernel n è in esecuzione, il producer può preparare i dati per n + 1 e il consumer può leggere i risultati di n – 1.
   Portabilità: il flusso è identico per GPU (Apple) e FPGA (Xilinx); cambiano solo le funzioni specifiche usate dentro DeviceAdapter.



// In root:
rm -rf build
mkdir build && cd build
cmake ..
cmake --build .
./tesi-cpu-baseline-exec



// CPU Baseline misurations (compute vs end-to-end)
N=1000000 elapsed=3505 µs, computed=2592 µs
N=16777216 elapsed=48578 µs, computed=47575 µs
N=67108864 elapsed=195334 µs, computed=194395 µs