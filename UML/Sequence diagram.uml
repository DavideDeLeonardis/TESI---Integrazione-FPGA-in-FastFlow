@startuml Sequence_FastFlowAccel
participant Upstream          as "Upstream\nFF thread"
participant NodeMain          as "ff_node_acc_t\n(main thread)"
participant ProducerThread    as "producerThread"
participant Adapter           as "DeviceAdapter"
participant OCL               as "OpenCL runtime"
participant ConsumerThread    as "consumerThread"
participant Downstream        as "Downstream\nFF thread"

== Avvio ==
Upstream  -> NodeMain    : svc_init()
activate NodeMain
NodeMain  -> Adapter     : init()
NodeMain  -> ProducerThread ++ : spawn()
NodeMain  -> ConsumerThread ++ : spawn()
NodeMain  <-- Upstream   : return 0

== Loop push task ==
Upstream  -> NodeMain    : svc(task)
NodeMain  -> ProducerThread  : inQ_.push(task)
NodeMain  <-- Upstream   : GO_ON

== Producer ==
loop while !done_
  ProducerThread -> Adapter : prepareBuffers(task)
  ProducerThread -> Adapter : launchKernel(task)
  Adapter        -> OCL     : enqueueWriteBuffer / kernel / etc.
end

== Consumer ==
loop while !done_ or pending
  ConsumerThread -> Adapter : waitEvent()
  Adapter        -> OCL     : enqueueReadBuffer
  ConsumerThread -> Downstream : outQ_.push(result)
end

== Chiusura ==
Upstream  -> NodeMain    : svc(nullptr) (EOS)
NodeMain  -> ProducerThread : inQ_.push(nullptr)
NodeMain  -> ConsumerThread : done_ = true
ProducerThread -->> NodeMain : join()
ConsumerThread -->> NodeMain : join()
NodeMain  -> Adapter     : cleanup()
NodeMain  --> Upstream   : EOS
deactivate NodeMain
@enduml
